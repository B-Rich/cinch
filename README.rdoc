= Cinch: The IRC Microframework

== Description

Cinch is an IRC Microframework for quickly creating IRC bots
in Ruby with minimal effort.

The Cinch philosophy is very based on that of the {Sinatra web framework}[http://www.sinatrarb.com].
It provides a minimal DSL like interface based on plugins and rules. It's as simple as greating a
plugin, defining a rule, and watching your profits flourish.

Cinch will do all of the hard work for you, so you can spend time creating cool plugins
and extensions to wow your internet peers.

== Installation

=== RubyGems
You can install the latest version of Cinch using RubyGems
 gem install cinch

=== GitHub
Alternatively you can check out the latest code directly from Github
 git clone http://github.com/injekt/cinch.git

== Example

Your typical <em>Hello, World</em> application would go something like this:

 require 'cinch'

 setup do
   server "irc.freenode.org"
   nick "Cinch"
 end

 plugin 'hello' do
   reply "Hello, #{nick}!"
 end

It doesn't take much to work out what's happening here, but I'll explain it anyway.

First we define the <em>setup</em> block which is required in every application. Cinch is boxed
with a load of default values, so the <b>only</b> option required in this block is the <em>server</em>
option. We then define a plugin using the <em>plugin</em> method and pass it a rule (a String in this
case). Every plugin must be happeded to a rule. When the rule matches an IRC message its block is
invoked, the contents of which contains your plugin interface.

This example would provide the following response on IRC:

 * Cinch has joined #cinch
 injekt> !hello
 Cinch> Hello, injekt!

Plugins are invoked using the command prefix character (which by default is set to <b>!</b>). You can
also tell Cinch to ignore any command prefix and instead use the bots username. This would provide
a result similar to this:

 injekt> Cinch: hello
 Cinch> Hello, injekt!

== Authors
Just me at the moment, sad poor lonely me...
* {Lee Jarvis}[http://blog.injekt.net]

== Notes

* RDoc API documentation is available {here}[http://rdoc.injekt.net/cinch]
* Wiki is available {here}[https://github.com/injekt/cinch/wikis]
* Issue and feature tracking is available {here}[https://github.com/injekt/cinch/issues]
* Contribution in the form of bugfixes or feature requests is welcome and encouraged

If you'd like to contribute, fork the GitHub repository, make any changes, and send 
{injekt}[http://github.com/injekt] a pull request. Collaborator access is available on
request once one patch has been submitted.

